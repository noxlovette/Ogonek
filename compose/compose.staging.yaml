name: ogonek-staging
services:
  svelte:
    image: ghcr.io/noxlovette/svelte-ogonek:1.9.0
    container_name: svelte-ogonek-staging
    ports:
      - "3002:3000"
    env_file:
      - ../svelte/.env
    depends_on:
      - axum
  redis:
    image: redis/redis-stack-server:latest
    container_name: redis-ogonek-staging
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 1s
      timeout: 3s
      retries: 5
      start_period: 30s
  gotenberg:
    build:
      context: ../gotenberg
      dockerfile: Dockerfile
    container_name: gotenberg-ogonek-staging
  axum:
    image: ghcr.io/noxlovette/axum-ogonek:1.9.0
    container_name: axum-ogonek-staging
    ports:
      - "3000:3000"
    env_file:
      - ../axum/.env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    depends_on:
      postgres:
        condition: service_healthy
  postgres:
    image: postgres:17-alpine
    container_name: pg-ogonek-staging
    restart: always
    ports:
      - "5433:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    env_file:
      - ../.env
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
volumes:
  cargo-cache:
    name: cargo-cache-ogonek-staging
  cargo-target:
    name: cargo-target-ogonek-staging
  db-data:
    name: db-ogonek-staging
