<!-- Mobile filters (collapsible) -->
{#if showMobileFilters}
  <div class="md:hidden" in:fly={{ y: -20, duration: 200 }}>
    <div
      class="border-milk-200 dark:border-milk-800 dark:bg-milk-900 rounded-lg border bg-white p-4 shadow-sm"
    >
      <h3 class="text-milk-700 dark:text-milk-300 mb-3 font-medium">Filters</h3>
      <div class="space-y-3">
        {#if students.length > 0}
          <div>
            <label
              for="mobile-assignee"
              class="text-milk-600 dark:text-milk-400 block text-sm"
              >Student</label
            >
            <select
              id="mobile-assignee"
              name="assignee"
              bind:value={filterAssignee}
              class="border-milk-200 focus:border-cacao-500 focus:ring-cacao-500/20 dark:border-milk-800 dark:bg-milk-950 dark:focus:border-cacao-500 dark:focus:ring-cacao-500/30 mt-1 w-full rounded-lg border bg-white py-2 pl-3 text-sm shadow-sm focus:ring-2 focus:outline-none"
            >
              <option value="">All Students</option>
              {#each students as student}
                <option value={student.id}>
                  {student.name}
                </option>
              {/each}
            </select>
          </div>
        {/if}
        <div class="flex justify-between pt-2">
          <button
            onclick={() => resetFilters()}
            class="text-milk-600 hover:text-milk-800 dark:text-milk-400 dark:hover:text-milk-200 text-sm"
          >
            Reset filters
          </button>
          <button
            onclick={() => (showMobileFilters = false)}
            class="bg-cacao-500 hover:bg-cacao-600 dark:bg-cacao-600 dark:hover:bg-cacao-700 rounded-lg px-3 py-1.5 text-sm font-medium text-white shadow-sm transition-colors"
          >
            Apply
          </button>
        </div>
      </div>
    </div>
  </div>
{/if}


 <form
          action="?/new"
          method="post"
          class="md:hidden"
          use:enhance={() => {
            isSubmitting = true;
            return async ({ result }) => {
              isSubmitting = false;
              if (result.type === "redirect") {
                notification.set({
                  message: "New entry created",
                  type: "success",
                });
                goto(result.location);
              } else {
                notification.set({
                  message: "Something's off",
                  type: "error",
                });
              }
            };
          }}
        >
          <button
            class="bg-cacao-500 hover:bg-cacao-600 focus:ring-cacao-500 dark:bg-cacao-600 dark:hover:bg-cacao-700 dark:focus:ring-offset-milk-900 inline-flex items-center justify-center rounded-lg px-3 py-1.5 text-sm font-medium text-white shadow-sm transition-colors focus:ring-2 focus:ring-offset-2 focus:outline-none disabled:opacity-50"
            disabled={isSubmitting}
          >
            <PlusCircle class="mr-1.5 h-4 w-4" />
            New
          </button>
        </form>