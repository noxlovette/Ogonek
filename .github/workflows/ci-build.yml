name: CI Build
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      JWT_PRIVATE_KEY: ${{ secrets.JWT_PRIVATE_KEY }}
      JWT_PUBLIC_KEY: ${{ secrets.JWT_PUBLIC_KEY }}

    services:
      postgres:
        image: postgres:alpine
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Rust setup
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      # Install sqlx-cli
      - name: Install sqlx-cli
        run: cargo install sqlx-cli --no-default-features --features native-tls,postgres

      # Set up database
      - name: Run database migrations
        run: |
          cd axum
          sqlx migrate run

      - name: Rust Lint and Format
        run: |
          cd axum
          cargo fmt -- --check
          cargo clippy -- -D warnings

      - name: Rust Tests
        run: |
          cd axum
          cargo test

      # Node setup for Svelte
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install Svelte dependencies
        run: |
          cd svelte
          pnpm install

      - name: Svelte Lint and Format
        run: |
          cd svelte
          pnpm lint
          pnpm format

      - name: Svelte Test
        run: |
          cd svelte
          pnpm exec playwright install
          pnpm test
