name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  CARGO_TERM_COLOR: always

jobs:
  rust-backend:
    name: 🦀 Rust Backend
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    env:
      DATABASE_URL: postgresql://testuser:testpass@localhost:5432/test_db
      REDIS_URL: redis://localhost:6379
      JWT_PRIVATE_KEY: ${{ secrets.JWT_PRIVATE_KEY }}
      JWT_PUBLIC_KEY: ${{ secrets.JWT_PUBLIC_KEY }}
      API_KEY: ${{ secrets.API_KEY }}

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🦀 Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: 📦 Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            axum/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('axum/**/Cargo.lock', 'axum/**/Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: 🔧 Install sqlx-cli
        run: cargo install sqlx-cli --version 0.8.6 --no-default-features --features native-tls,postgres --force

      - name: 🗄️  Run database migrations
        working-directory: axum
        run: sqlx migrate run

      - name: 🎨 Check Rust formatting
        working-directory: axum
        run: cargo fmt --check

      - name: 🔍 Run Clippy linter
        working-directory: axum
        run: cargo clippy -- -D warnings

      - name: 🧪 Run Rust tests
        working-directory: axum
        run: cargo test

      - name: 🗄️  Prepare sqlx queries
        working-directory: axum
        run: cargo sqlx prepare --check

      - name: 📋 Generate OpenAPI spec
        working-directory: axum
        run: cargo run --bin generate_types

      - name: 📤 Upload OpenAPI spec
        uses: actions/upload-artifact@v4
        with:
          name: openapi-spec
          path: axum/openapi.yaml
          retention-days: 30

  svelte-frontend:
    name: ⚡ Svelte Frontend
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "pnpm"
          cache-dependency-path: svelte/pnpm-lock.yaml

      - name: 📦 Install pnpm
        uses: pnpm/action-setup@v4
        with:
          package_json_file: svelte/package.json

      - name: 📦 Install dependencies
        working-directory: svelte
        run: pnpm install --frozen-lockfile

      - name: 🎨 Check formatting
        working-directory: svelte
        run: pnpm format:check

      #- name: 🔍 Type check
      #  working-directory: svelte
      #  run: pnpm check

      - name: 🏗️  Build application
        working-directory: svelte
        run: pnpm build

      - name: 📤 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: svelte-build
          path: svelte/build/
          retention-days: 7
